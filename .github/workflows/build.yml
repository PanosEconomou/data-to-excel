name: Build Executables

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest, macos-13]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Create hook for readchar
        run: |
          echo "from PyInstaller.utils.hooks import copy_metadata" > hook-readchar.py
          echo "datas = copy_metadata('readchar')" >> hook-readchar.py

      - name: Build executable
        run: |
          pyinstaller --onefile --clean --console --additional-hooks-dir=. BO-2-data-to-excel.py

      - name: Check if executable exists
        run: ls -l dist/

      - name: Compress Normal
        if: ${{ matrix.os != 'windows-latest' }}
        run: |
          chmod +x dist/*
          zip -r ${{ matrix.os }}.zip dist

      - name: Compress Windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: Compress-Archive -Path "dist\*" -DestinationPath ${{ matrix.os }}.zip

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-executable
          path: ./${{ matrix.os }}.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Create a tag for this commit
        run: |
          TAG_NAME="v$(date +'%Y%m%d%H%M%S')"
          git tag $TAG_NAME
          git push origin $TAG_NAME
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV

      - name: Create a Release
        uses: actions/create-release@v1
        id: create_release
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: "Logger Excel"
          body: "Compiled executables"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Download Windows executable artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-latest-executable
          path: windows

      - name: Download Mac x86_64 executable artifact
        uses: actions/download-artifact@v4
        with:
          name: macos-13-executable
          path: macos-x86_64

      - name: Download Mac arm64 executable artifact
        uses: actions/download-artifact@v4
        with:
          name: macos-latest-executable
          path: macos-arm64

      - name: Download Linux executable artifact
        uses: actions/download-artifact@v4
        with:
          name: ubuntu-latest-executable
          path: linux

      - name: List the directory
        run: ls -R .

      - name: Upload Linux executable to GitHub Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./linux/ubuntu-latest.zip # Path to the Linux executable
          asset_name: BO-2-data-to-excel-linux.zip # Name of the asset
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Windows executable to GitHub Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./windows/windows-latest.zip # Path to the Windows executable
          asset_name: BO-2-data-to-excel-windows.zip # Name of the asset
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload macOS x86 executable to GitHub Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./macos-x86_64/macos-13.zip # Path to the macOS executable
          asset_name: BO-2-data-to-excel-macos-x86_64.zip # Name of the asset
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload macOS arm executable to GitHub Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./macos-arm64/macos-latest.zip # Path to the macOS executable
          asset_name: BO-2-data-to-excel-macos.zip # Name of the asset
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
